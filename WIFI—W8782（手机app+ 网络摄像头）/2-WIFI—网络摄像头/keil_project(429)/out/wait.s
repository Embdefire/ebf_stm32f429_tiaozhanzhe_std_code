; generated by Component: ARM Compiler 5.06 (build 20) Tool: ArmCC [4d35a4]
; commandline ArmCC [--split_sections --debug -c -S -o.\out\wait.s --depend=.\out\wait.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931,1035,188,68,161,1441 -I..\net\lwip\src\include\ipv4 -I..\net\lwip\src\include -I..\net\lwip\src\arch -I..\net\lwip\src -I..\kernel\api\inc -I..\app\inc -I..\config -I..\jpeg\jpeg-9a -I..\net\udhcp-0.9.8 -I..\libmad-0.15.1b -I..\net\libertas\inc -I..\net\wpa -I..\net\wlan_src\mlan -I..\net\wlan_src\mlinux -I..\net\wlan_src\user -I..\net\wlan_src\mapp -I..\net\wlan_src\mapp\wifidirectutl -I..\kernel\ucos3\uC-CPU -I..\kernel\ucos3\uC-LIB\Cfg -I..\kernel\ucos3\uC-LIB\Ports -I..\kernel\ucos3\uC-LIB\Source -I..\drivers\stm32f4xx\inc -I..\net\mosquitto-1.3.4\lib -I..\kernel\ucos3\uCOS-III\Cfg -I..\kernel\ucos3\uCOS-III\Ports -I..\kernel\ucos3\uCOS-III\Source -I..\Speex_Lib\include\speex -I..\..\Speex_Lib\include -I..\..\Speex_Lib\libspeex -I..\net\mosquitto-1.3.4\src -I..\app\inc\audio -I..\..\Speex_Lib\STM32 -I..\..\Speex_Lib\STM32\include -I..\..\Speex_Lib\STM32\libspeex -I..\..\Speex_Lib\STM32\libspeex\arm -I..\bsp\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\bsp\Libraries\STM32F4xx_StdPeriph_Driver\inc -I"G:\STM32F4\F4-F7Àý³Ì\429-V2-1-¹Ì¼þ¿âÀý³Ì\WIFI¡ªW8782£¨ÊÖ»úapp+ ÍøÂçÉãÏñÍ·£©\2-WIFI¡ªÍøÂçÉãÏñÍ·\keil_project(429)\RTE" -ID:\work\keil5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -ID:\work\keil5\ARM\PACK\Keil\STM32F4xx_DFP\2.5.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__MICROLIB -D__UVISION_VERSION=516 -D_RTE_ -DSTM32F429xx -D__FPU_PRESENT=1 -DARM_MATH_CM4 -DSTM32F429xx -DSTM32F429_439xx -DUSE_STDPERIPH_DRIVER -DOS_UCOS -DUCOS_V3 --omf_browse=.\out\wait.crf ..\kernel\api\src\wait.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.clear_wait_event||, CODE, READONLY, ALIGN=2

        REQUIRE _printf_pre_padding
        REQUIRE _printf_percent
        REQUIRE _printf_flags
        REQUIRE _printf_widthprec
        REQUIRE _printf_d
        REQUIRE _printf_int_dec
clear_wait_event PROC
        PUSH     {r3-r7,lr}
        MOV      r4,r0
        CBNZ     r4,|L0.62|
        NOP      
        BL       os_time_get
        MOV      r1,#0x3e8
        UDIV     r2,r0,r1
        MLS      r5,r1,r2,r0
        BL       os_time_get
        MOV      r1,#0x3e8
        UDIV     r6,r0,r1
        MOV      r2,r5
        MOV      r1,r6
        ADR      r0,|L0.140|
        BL       __2printf
        ADR      r0,|L0.156|
        BL       __2printf
        ADR      r0,|L0.180|
        BL       __2printf
        NOP      
|L0.60|
        POP      {r3-r7,pc}
|L0.62|
        MOV      r2,sp
        MOVS     r1,#0
        MOV      r0,r4
        BL       OSSemSet
        LDRH     r0,[sp,#0]
        CBZ      r0,|L0.136|
        NOP      
        BL       os_time_get
        MOV      r1,#0x3e8
        UDIV     r2,r0,r1
        MLS      r5,r1,r2,r0
        BL       os_time_get
        MOV      r1,#0x3e8
        UDIV     r6,r0,r1
        MOV      r2,r5
        MOV      r1,r6
        ADR      r0,|L0.140|
        BL       __2printf
        LDRH     r1,[sp,#0]
        ADR      r0,|L0.184|
        BL       __2printf
        ADR      r0,|L0.180|
        BL       __2printf
        NOP      
|L0.136|
        NOP      
        B        |L0.60|
        ENDP

|L0.140|
        DCB      "[E: %d.%03d] ",0
        DCB      0
        DCB      0
|L0.156|
        DCB      "clear_wait_event wq err",0
|L0.180|
        DCB      "\r\n",0
        DCB      0
|L0.184|
        DCB      "clear_wait_event err %d",0

        AREA ||i.del_event||, CODE, READONLY, ALIGN=1

del_event PROC
        PUSH     {r3-r5,lr}
        MOV      r4,r0
        MOV      r2,sp
        MOVS     r1,#1
        MOV      r0,r4
        BL       OSSemDel
        NOP      
        MOV      r0,r4
        BL       vPortFree
        NOP      
        POP      {r3-r5,pc}
        ENDP


        AREA ||i.init_event||, CODE, READONLY, ALIGN=2

        REQUIRE _printf_pre_padding
        REQUIRE _printf_percent
        REQUIRE _printf_flags
        REQUIRE _printf_widthprec
        REQUIRE _printf_d
        REQUIRE _printf_int_dec
init_event PROC
        PUSH     {r3-r9,lr}
        MOVS     r6,#0x28
        MOVS     r7,#1
        SMULBB   r8,r6,r7
        MOV      r0,r8
        BL       pvPortMalloc
        MOV      r5,r0
        CBZ      r5,|L2.32|
        MUL      r1,r6,r7
        MOV      r0,r5
        BL       __aeabi_memclr
|L2.32|
        MOV      r4,r5
        NOP      
        CBNZ     r4,|L2.44|
        MOVS     r0,#0
|L2.40|
        POP      {r3-r9,pc}
|L2.44|
        MOV      r3,sp
        MOVS     r2,#0
        ADR      r1,|L2.116|
        MOV      r0,r4
        BL       OSSemCreate
        CBNZ     r4,|L2.112|
        NOP      
        BL       os_time_get
        MOV      r1,#0x3e8
        UDIV     r2,r0,r1
        MLS      r5,r1,r2,r0
        BL       os_time_get
        MOV      r1,#0x3e8
        UDIV     r6,r0,r1
        MOV      r2,r5
        MOV      r1,r6
        ADR      r0,|L2.120|
        BL       __2printf
        ADR      r0,|L2.136|
        BL       __2printf
        ADR      r0,|L2.160|
        BL       __2printf
        NOP      
|L2.112|
        MOV      r0,r4
        B        |L2.40|
        ENDP

|L2.116|
        DCB      0
        DCB      0
        DCB      0
        DCB      0
|L2.120|
        DCB      "[E: %d.%03d] ",0
        DCB      0
        DCB      0
|L2.136|
        DCB      "init_waitqueue_head err",0
|L2.160|
        DCB      "\r\n",0
        DCB      0

        AREA ||i.wait_event||, CODE, READONLY, ALIGN=2

        REQUIRE _printf_pre_padding
        REQUIRE _printf_percent
        REQUIRE _printf_flags
        REQUIRE _printf_widthprec
        REQUIRE _printf_d
        REQUIRE _printf_int_dec
wait_event PROC
        PUSH     {r2-r6,lr}
        MOV      r4,r0
        CBNZ     r4,|L3.12|
        MOV      r0,#0xffffffff
|L3.10|
        POP      {r2-r6,pc}
|L3.12|
        ADD      r0,sp,#4
        MOVS     r3,#0
        MOV      r2,r3
        MOV      r1,r3
        STR      r0,[sp,#0]
        MOV      r0,r4
        BL       OSSemPend
        LDRH     r0,[sp,#4]
        CBNZ     r0,|L3.38|
        MOVS     r0,#0
        B        |L3.10|
|L3.38|
        NOP      
        BL       os_time_get
        MOV      r1,#0x3e8
        UDIV     r2,r0,r1
        MLS      r5,r1,r2,r0
        BL       os_time_get
        MOV      r1,#0x3e8
        UDIV     r6,r0,r1
        MOV      r2,r5
        MOV      r1,r6
        ADR      r0,|L3.104|
        BL       __2printf
        LDRH     r1,[sp,#4]
        ADR      r0,|L3.120|
        BL       __2printf
        ADR      r0,|L3.144|
        BL       __2printf
        NOP      
        MOV      r0,#0xffffffff
        B        |L3.10|
        ENDP

        DCW      0x0000
|L3.104|
        DCB      "[E: %d.%03d] ",0
        DCB      0
        DCB      0
|L3.120|
        DCB      "add_wait_queue err:%d\n",0
        DCB      0
|L3.144|
        DCB      "\r\n",0
        DCB      0

        AREA ||i.wait_event_timeout||, CODE, READONLY, ALIGN=2

        REQUIRE _printf_pre_padding
        REQUIRE _printf_percent
        REQUIRE _printf_flags
        REQUIRE _printf_widthprec
        REQUIRE _printf_d
        REQUIRE _printf_int_dec
wait_event_timeout PROC
        PUSH     {r2-r8,lr}
        MOV      r4,r0
        MOV      r5,r1
        CBNZ     r4,|L4.72|
        NOP      
        BL       os_time_get
        MOV      r1,#0x3e8
        UDIV     r2,r0,r1
        MLS      r6,r1,r2,r0
        BL       os_time_get
        MOV      r1,#0x3e8
        UDIV     r7,r0,r1
        MOV      r2,r6
        MOV      r1,r7
        ADR      r0,|L4.128|
        BL       __2printf
        ADR      r0,|L4.144|
        BL       __2printf
        ADR      r0,|L4.172|
        BL       __2printf
        NOP      
        MOV      r0,#0xffffffff
|L4.68|
        POP      {r2-r8,pc}
|L4.72|
        MOV      r0,r5
        BL       ms2ticks
        MOV      r8,r0
        ADD      r0,sp,#4
        MOVS     r3,#0
        MOV      r2,r3
        MOV      r1,r8
        STR      r0,[sp,#0]
        MOV      r0,r4
        BL       OSSemPend
        LDRH     r0,[sp,#4]
        CBNZ     r0,|L4.106|
        MOVS     r0,#0
        B        |L4.68|
|L4.106|
        LDRH     r0,[sp,#4]
        MOV      r1,#0x72d9
        CMP      r0,r1
        BNE      |L4.122|
        MOVS     r0,#1
        B        |L4.68|
|L4.122|
        MOV      r0,#0xffffffff
        B        |L4.68|
        ENDP

|L4.128|
        DCB      "[E: %d.%03d] ",0
        DCB      0
        DCB      0
|L4.144|
        DCB      "wait_event_timeout wq err",0
        DCB      0
        DCB      0
|L4.172|
        DCB      "\r\n",0
        DCB      0

        AREA ||i.wake_up||, CODE, READONLY, ALIGN=2

        REQUIRE _printf_pre_padding
        REQUIRE _printf_percent
        REQUIRE _printf_flags
        REQUIRE _printf_widthprec
        REQUIRE _printf_d
        REQUIRE _printf_int_dec
wake_up PROC
        PUSH     {r3-r7,lr}
        MOV      r4,r0
        MOV      r2,sp
        MOV      r1,#0x200
        MOV      r0,r4
        BL       OSSemPost
        LDRH     r0,[sp,#0]
        CBZ      r0,|L5.80|
        NOP      
        BL       os_time_get
        MOV      r1,#0x3e8
        UDIV     r2,r0,r1
        MLS      r5,r1,r2,r0
        BL       os_time_get
        MOV      r1,#0x3e8
        UDIV     r6,r0,r1
        MOV      r2,r5
        MOV      r1,r6
        ADR      r0,|L5.84|
        BL       __2printf
        LDRH     r1,[sp,#0]
        ADR      r0,|L5.100|
        BL       __2printf
        ADR      r0,|L5.116|
        BL       __2printf
        NOP      
|L5.80|
        POP      {r3-r7,pc}
        ENDP

        DCW      0x0000
|L5.84|
        DCB      "[E: %d.%03d] ",0
        DCB      0
        DCB      0
|L5.100|
        DCB      "wake_up err %d",0
        DCB      0
|L5.116|
        DCB      "\r\n",0
        DCB      0

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        EXPORT clear_wait_event [CODE]
        EXPORT del_event [CODE]
        EXPORT init_event [CODE]
        EXPORT wait_event [CODE]
        EXPORT wait_event_timeout [CODE]
        EXPORT wake_up [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT pvPortMalloc [CODE]
        IMPORT __aeabi_memclr [CODE]
        IMPORT OSSemCreate [CODE]
        IMPORT os_time_get [CODE]
        IMPORT _printf_pre_padding [CODE]
        IMPORT _printf_percent [CODE]
        IMPORT _printf_flags [CODE]
        IMPORT _printf_widthprec [CODE]
        IMPORT _printf_d [CODE]
        IMPORT _printf_int_dec [CODE]
        IMPORT __2printf [CODE]
        IMPORT OSSemPend [CODE]
        IMPORT ms2ticks [CODE]
        IMPORT OSSemPost [CODE]
        IMPORT OSSemDel [CODE]
        IMPORT vPortFree [CODE]
        IMPORT OSSemSet [CODE]

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
