; generated by Component: ARM Compiler 5.06 (build 20) Tool: ArmCC [4d35a4]
; commandline ArmCC [--split_sections --debug -c -S -o.\out\timer.s --depend=.\out\timer.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931,1035,188,68,161,1441 -I..\net\lwip\src\include\ipv4 -I..\net\lwip\src\include -I..\net\lwip\src\arch -I..\net\lwip\src -I..\kernel\api\inc -I..\app\inc -I..\config -I..\jpeg\jpeg-9a -I..\net\udhcp-0.9.8 -I..\libmad-0.15.1b -I..\net\libertas\inc -I..\net\wpa -I..\net\wlan_src\mlan -I..\net\wlan_src\mlinux -I..\net\wlan_src\user -I..\net\wlan_src\mapp -I..\net\wlan_src\mapp\wifidirectutl -I..\kernel\ucos3\uC-CPU -I..\kernel\ucos3\uC-LIB\Cfg -I..\kernel\ucos3\uC-LIB\Ports -I..\kernel\ucos3\uC-LIB\Source -I..\drivers\stm32f4xx\inc -I..\net\mosquitto-1.3.4\lib -I..\kernel\ucos3\uCOS-III\Cfg -I..\kernel\ucos3\uCOS-III\Ports -I..\kernel\ucos3\uCOS-III\Source -I..\Speex_Lib\include\speex -I..\..\Speex_Lib\include -I..\..\Speex_Lib\libspeex -I..\net\mosquitto-1.3.4\src -I..\app\inc\audio -I..\..\Speex_Lib\STM32 -I..\..\Speex_Lib\STM32\include -I..\..\Speex_Lib\STM32\libspeex -I..\..\Speex_Lib\STM32\libspeex\arm -I..\bsp\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\bsp\Libraries\STM32F4xx_StdPeriph_Driver\inc -I"G:\STM32F4\F4-F7Àý³Ì\429-V2-1-¹Ì¼þ¿âÀý³Ì\WIFI¡ªW8782£¨ÊÖ»úapp+ ÍøÂçÉãÏñÍ·£©\2-WIFI¡ªÍøÂçÉãÏñÍ·\keil_project(429)\RTE" -ID:\work\keil5\ARM\PACK\ARM\CMSIS\4.3.0\CMSIS\Include -ID:\work\keil5\ARM\PACK\Keil\STM32F4xx_DFP\2.5.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__MICROLIB -D__UVISION_VERSION=516 -D_RTE_ -DSTM32F429xx -D__FPU_PRESENT=1 -DARM_MATH_CM4 -DSTM32F429xx -DSTM32F429_439xx -DUSE_STDPERIPH_DRIVER -DOS_UCOS -DUCOS_V3 --omf_browse=.\out\timer.crf ..\kernel\api\src\timer.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i._comm_timer_callback||, CODE, READONLY, ALIGN=2

        REQUIRE _printf_pre_padding
        REQUIRE _printf_percent
        REQUIRE _printf_flags
        REQUIRE _printf_widthprec
        REQUIRE _printf_d
        REQUIRE _printf_int_dec
        REQUIRE _printf_s
        REQUIRE _printf_str
_comm_timer_callback PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        MOV      r7,r1
        NOP      
        CMP      r4,#0
        BNE      |L0.76|
        NOP      
        BL       os_time_get
        MOV      r1,#0x3e8
        UDIV     r2,r0,r1
        MLS      r5,r1,r2,r0
        BL       os_time_get
        MOV      r1,#0x3e8
        UDIV     r6,r0,r1
        MOV      r2,r5
        MOV      r1,r6
        ADR      r0,|L0.92|
        BL       __2printf
        MOVS     r2,#9
        ADR      r1,|L0.108|
        ADR      r0,|L0.136|
        BL       __2printf
        ADR      r0,|L0.164|
        BL       __2printf
        NOP      
        NOP      
|L0.74|
        B        |L0.74|
|L0.76|
        NOP      
        ADD      r0,r4,#0x38
        BL       timer_tasklet_callback
        POP      {r4-r8,pc}
        ENDP

        DCW      0x0000
|L0.92|
        DCB      "[E: %d.%03d] ",0
        DCB      0
        DCB      0
|L0.108|
        DCB      "..\\kernel\\api\\src\\timer.c",0
        DCB      0
        DCB      0
|L0.136|
        DCB      "%s:%d assert ptmrfailed\r\n",0
        DCB      0
        DCB      0
|L0.164|
        DCB      "\r\n",0
        DCB      0

        AREA ||i.add_timer||, CODE, READONLY, ALIGN=2

        REQUIRE _printf_pre_padding
        REQUIRE _printf_percent
        REQUIRE _printf_flags
        REQUIRE _printf_widthprec
        REQUIRE _printf_d
        REQUIRE _printf_int_dec
add_timer PROC
        PUSH     {r3-r7,lr}
        MOV      r4,r0
        CBNZ     r4,|L1.66|
        NOP      
        BL       os_time_get
        MOV      r1,#0x3e8
        UDIV     r2,r0,r1
        MLS      r5,r1,r2,r0
        BL       os_time_get
        MOV      r1,#0x3e8
        UDIV     r6,r0,r1
        MOV      r2,r5
        MOV      r1,r6
        ADR      r0,|L1.92|
        BL       __2printf
        ADR      r0,|L1.108|
        BL       __2printf
        ADR      r0,|L1.128|
        BL       __2printf
        NOP      
        MOV      r0,#0xffffffff
|L1.64|
        POP      {r3-r7,pc}
|L1.66|
        MOV      r1,sp
        MOV      r0,r4
        BL       OSTmrStart
        LDRH     r0,[sp,#0]
        CBNZ     r0,|L1.84|
        MOVS     r0,#0
        B        |L1.64|
|L1.84|
        MOV      r0,#0xffffffff
        B        |L1.64|
        ENDP

        DCW      0x0000
|L1.92|
        DCB      "[E: %d.%03d] ",0
        DCB      0
        DCB      0
|L1.108|
        DCB      "add_timer tmr err",0
        DCB      0
        DCB      0
|L1.128|
        DCB      "\r\n",0
        DCB      0

        AREA ||i.del_timer||, CODE, READONLY, ALIGN=2

        REQUIRE _printf_pre_padding
        REQUIRE _printf_percent
        REQUIRE _printf_flags
        REQUIRE _printf_widthprec
        REQUIRE _printf_d
        REQUIRE _printf_int_dec
del_timer PROC
        PUSH     {r3-r7,lr}
        MOV      r4,r0
        MOV      r5,r4
        CBNZ     r5,|L2.66|
        NOP      
        BL       os_time_get
        MOV      r1,#0x3e8
        UDIV     r2,r0,r1
        MLS      r6,r1,r2,r0
        BL       os_time_get
        MOV      r1,#0x3e8
        UDIV     r7,r0,r1
        MOV      r2,r6
        MOV      r1,r7
        ADR      r0,|L2.108|
        BL       __2printf
        ADR      r0,|L2.124|
        BL       __2printf
        ADR      r0,|L2.144|
        BL       __2printf
        NOP      
        MOVS     r0,#0
|L2.64|
        POP      {r3-r7,pc}
|L2.66|
        MOV      r0,r4
        BL       timer_pending
        CBZ      r0,|L2.90|
        MOV      r3,sp
        MOVS     r2,#0
        MOV      r1,r2
        MOV      r0,r5
        BL       OSTmrStop
        MOVS     r0,#1
        B        |L2.64|
|L2.90|
        MOV      r3,sp
        MOVS     r2,#0
        MOV      r1,r2
        MOV      r0,r5
        BL       OSTmrStop
        MOVS     r0,#0
        B        |L2.64|
        ENDP

        DCW      0x0000
|L2.108|
        DCB      "[E: %d.%03d] ",0
        DCB      0
        DCB      0
|L2.124|
        DCB      "del_timer tmr err",0
        DCB      0
        DCB      0
|L2.144|
        DCB      "\r\n",0
        DCB      0

        AREA ||i.mod_timer||, CODE, READONLY, ALIGN=2

        REQUIRE _printf_pre_padding
        REQUIRE _printf_percent
        REQUIRE _printf_flags
        REQUIRE _printf_widthprec
        REQUIRE _printf_d
        REQUIRE _printf_int_dec
mod_timer PROC
        PUSH     {r3-r9,lr}
        MOV      r6,r0
        MOV      r4,r1
        MOV      r5,r6
        CBNZ     r5,|L3.72|
        NOP      
        BL       os_time_get
        MOV      r1,#0x3e8
        UDIV     r2,r0,r1
        MLS      r8,r1,r2,r0
        BL       os_time_get
        MOV      r1,#0x3e8
        UDIV     r9,r0,r1
        MOV      r2,r8
        MOV      r1,r9
        ADR      r0,|L3.124|
        BL       __2printf
        ADR      r0,|L3.140|
        BL       __2printf
        ADR      r0,|L3.160|
        BL       __2printf
        NOP      
        MOVS     r0,#0
|L3.68|
        POP      {r3-r9,pc}
|L3.72|
        MOV      r0,r4
        BL       ms2ticks
        MOV      r4,r0
        MOV      r0,r6
        BL       timer_pending
        CBZ      r0,|L3.92|
        MOVS     r0,#1
        B        |L3.68|
|L3.92|
        STR      r4,[r5,#0x20]
        STR      r4,[r5,#0x24]
        MOV      r1,sp
        MOV      r0,r5
        BL       OSTmrStart
        MOV      r7,r0
        CMP      r7,#1
        BNE      |L3.120|
        LDRH     r0,[sp,#0]
        CBNZ     r0,|L3.120|
        MOVS     r0,#0
        B        |L3.68|
|L3.120|
        MOVS     r0,#0
        B        |L3.68|
        ENDP

|L3.124|
        DCB      "[E: %d.%03d] ",0
        DCB      0
        DCB      0
|L3.140|
        DCB      "mod_timer tmr err",0
        DCB      0
        DCB      0
|L3.160|
        DCB      "\r\n",0
        DCB      0

        AREA ||i.ms2ticks||, CODE, READONLY, ALIGN=1

ms2ticks PROC
        MOV      r1,r0
        CBNZ     r1,|L4.8|
        MOVS     r0,#0
|L4.6|
        BX       lr
|L4.8|
        CMP      r1,#0xa
        BCS      |L4.14|
        MOVS     r1,#0xa
|L4.14|
        MOVS     r0,#0x64
        MULS     r0,r1,r0
        MOV      r2,#0x3e8
        UDIV     r1,r0,r2
        MOV      r0,r1
        B        |L4.6|
        ENDP


        AREA ||i.os_time_get||, CODE, READONLY, ALIGN=2

os_time_get PROC
        LDR      r0,|L5.8|
        LDR      r0,[r0,#0]  ; tick_ms
        BX       lr
        ENDP

        DCW      0x0000
|L5.8|
        DCD      tick_ms

        AREA ||i.sleep||, CODE, READONLY, ALIGN=2

sleep PROC
        PUSH     {r3-r5,lr}
        MOV      r4,r0
        MOVS     r0,#0
        STR      r0,[sp,#0]
        LDR      r0,|L6.52|
        LDRB     r0,[r0,#0]  ; OSIntNestingCtr
        CBZ      r0,|L6.28|
        MOV      r1,#0x3e8
        MUL      r0,r4,r1
        BL       delay_us
|L6.26|
        POP      {r3-r5,pc}
|L6.28|
        MOV      r0,r4
        BL       ms2ticks
        MOV      r4,r0
        MOV      r2,sp
        MOVS     r1,#0
        MOV      r0,r4
        BL       OSTimeDly
        NOP      
        B        |L6.26|
        ENDP

        DCW      0x0000
|L6.52|
        DCD      OSIntNestingCtr

        AREA ||i.timer_free||, CODE, READONLY, ALIGN=2

        REQUIRE _printf_pre_padding
        REQUIRE _printf_percent
        REQUIRE _printf_flags
        REQUIRE _printf_widthprec
        REQUIRE _printf_d
        REQUIRE _printf_int_dec
timer_free PROC
        PUSH     {r3-r9,lr}
        MOV      r5,r0
        MOV      r4,r5
        MOV      r1,sp
        MOV      r0,r4
        BL       OSTmrDel
        MOV      r6,r0
        CMP      r6,#1
        BNE      |L7.44|
        LDRH     r0,[sp,#0]
        CBNZ     r0,|L7.44|
        NOP      
        MOV      r0,r4
        BL       vPortFree
        NOP      
        MOVS     r0,#0
|L7.40|
        POP      {r3-r9,pc}
|L7.44|
        NOP      
        BL       os_time_get
        MOV      r1,#0x3e8
        UDIV     r2,r0,r1
        MLS      r7,r1,r2,r0
        BL       os_time_get
        MOV      r1,#0x3e8
        UDIV     r8,r0,r1
        MOV      r2,r7
        MOV      r1,r8
        ADR      r0,|L7.108|
        BL       __2printf
        LDRH     r1,[sp,#0]
        ADR      r0,|L7.124|
        BL       __2printf
        ADR      r0,|L7.144|
        BL       __2printf
        NOP      
        MOV      r0,#0xffffffff
        B        |L7.40|
        ENDP

|L7.108|
        DCB      "[E: %d.%03d] ",0
        DCB      0
        DCB      0
|L7.124|
        DCB      "timer_free err %d",0
        DCB      0
        DCB      0
|L7.144|
        DCB      "\r\n",0
        DCB      0

        AREA ||i.timer_pending||, CODE, READONLY, ALIGN=2

        REQUIRE _printf_pre_padding
        REQUIRE _printf_percent
        REQUIRE _printf_flags
        REQUIRE _printf_widthprec
        REQUIRE _printf_d
        REQUIRE _printf_int_dec
timer_pending PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        MOV      r5,r4
        CBNZ     r5,|L8.70|
        NOP      
        BL       os_time_get
        MOV      r1,#0x3e8
        UDIV     r2,r0,r1
        MLS      r6,r1,r2,r0
        BL       os_time_get
        MOV      r1,#0x3e8
        UDIV     r7,r0,r1
        MOV      r2,r6
        MOV      r1,r7
        ADR      r0,|L8.88|
        BL       __2printf
        ADR      r0,|L8.104|
        BL       __2printf
        ADR      r0,|L8.128|
        BL       __2printf
        NOP      
        MOVS     r0,#0
|L8.66|
        POP      {r4-r8,pc}
|L8.70|
        LDRB     r0,[r5,#0x2a]
        CMP      r0,#2
        BNE      |L8.82|
        MOVS     r0,#1
        B        |L8.66|
|L8.82|
        MOVS     r0,#0
        B        |L8.66|
        ENDP

        DCW      0x0000
|L8.88|
        DCB      "[E: %d.%03d] ",0
        DCB      0
        DCB      0
|L8.104|
        DCB      "timer_pending tmr err",0
        DCB      0
        DCB      0
|L8.128|
        DCB      "\r\n",0
        DCB      0

        AREA ||i.timer_setup||, CODE, READONLY, ALIGN=2

        REQUIRE _printf_pre_padding
        REQUIRE _printf_percent
        REQUIRE _printf_flags
        REQUIRE _printf_widthprec
        REQUIRE _printf_d
        REQUIRE _printf_int_dec
timer_setup PROC
        PUSH     {r4-r10,lr}
        SUB      sp,sp,#0x18
        MOV      r5,r0
        MOV      r7,r1
        MOV      r6,r2
        MOV      r8,r3
        MOV      r0,r5
        BL       ms2ticks
        MOV      r5,r0
        CBNZ     r6,|L9.86|
        NOP      
        BL       os_time_get
        MOV      r1,#0x3e8
        UDIV     r2,r0,r1
        MLS      r9,r1,r2,r0
        BL       os_time_get
        MOV      r1,#0x3e8
        UDIV     r10,r0,r1
        MOV      r2,r9
        MOV      r1,r10
        ADR      r0,|L9.248|
        BL       __2printf
        ADR      r0,|L9.264|
        BL       __2printf
        ADR      r0,|L9.288|
        BL       __2printf
        NOP      
        MOVS     r0,#0
|L9.80|
        ADD      sp,sp,#0x18
        POP      {r4-r10,pc}
|L9.86|
        CBZ      r7,|L9.130|
        MOVS     r1,#0x48
        MOVS     r0,#1
        BL       mem_calloc
        MOV      r4,r0
        CBZ      r4,|L9.170|
        ADD      r0,sp,#0x14
        MOVS     r1,#0
        LDR      r2,|L9.292|
        MOVS     r3,#2
        STRD     r3,r2,[sp,#0]
        STRD     r1,r0,[sp,#8]
        MOV      r3,r5
        MOV      r2,r5
        ADR      r1,|L9.296|
        MOV      r0,r4
        BL       OSTmrCreate
        B        |L9.170|
|L9.130|
        MOVS     r1,#0x48
        MOVS     r0,#1
        BL       mem_calloc
        MOV      r4,r0
        CBZ      r4,|L9.170|
        ADD      r0,sp,#0x14
        MOVS     r1,#0
        LDR      r2,|L9.292|
        MOVS     r3,#1
        STRD     r3,r2,[sp,#0]
        STRD     r1,r0,[sp,#8]
        MOV      r3,r5
        MOV      r2,r5
        ADR      r1,|L9.296|
        MOV      r0,r4
        BL       OSTmrCreate
|L9.170|
        LDRH     r0,[sp,#0x14]
        CBZ      r0,|L9.232|
        MOVS     r4,#0
        NOP      
        BL       os_time_get
        MOV      r1,#0x3e8
        UDIV     r2,r0,r1
        MLS      r9,r1,r2,r0
        BL       os_time_get
        MOV      r1,#0x3e8
        UDIV     r10,r0,r1
        MOV      r2,r9
        MOV      r1,r10
        ADR      r0,|L9.248|
        BL       __2printf
        ADR      r0,|L9.304|
        BL       __2printf
        ADR      r0,|L9.288|
        BL       __2printf
        NOP      
|L9.232|
        MOV      r2,r8
        MOV      r1,r6
        ADD      r0,r4,#0x38
        BL       init_work
        MOV      r0,r4
        B        |L9.80|
        ENDP

|L9.248|
        DCB      "[E: %d.%03d] ",0
        DCB      0
        DCB      0
|L9.264|
        DCB      "setup_timer err arg\n",0
        DCB      0
        DCB      0
        DCB      0
|L9.288|
        DCB      "\r\n",0
        DCB      0
|L9.292|
        DCD      _comm_timer_callback
|L9.296|
        DCB      "TIMER",0
        DCB      0
        DCB      0
|L9.304|
        DCB      "setup_timer err\n",0
        DCB      0
        DCB      0
        DCB      0

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||i.mem_calloc||, COMGROUP=mem_calloc, CODE, READONLY, ALIGN=1

mem_calloc PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        MOV      r5,r1
        MUL      r7,r4,r5
        MOV      r0,r7
        BL       pvPortMalloc
        MOV      r6,r0
        CBZ      r6,|L65.32|
        MUL      r1,r4,r5
        MOV      r0,r6
        BL       __aeabi_memclr
|L65.32|
        MOV      r0,r6
        POP      {r4-r8,pc}
        ENDP


        EXPORT _comm_timer_callback [CODE]
        EXPORT add_timer [CODE]
        EXPORT del_timer [CODE]
        EXPORT mod_timer [CODE]
        EXPORT ms2ticks [CODE]
        EXPORT os_time_get [CODE]
        EXPORT sleep [CODE]
        EXPORT timer_free [CODE]
        EXPORT timer_pending [CODE]
        EXPORT timer_setup [CODE]
        EXPORT mem_calloc [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT pvPortMalloc [CODE]
        IMPORT __aeabi_memclr [CODE]
        IMPORT tick_ms [DATA]
        IMPORT _printf_pre_padding [CODE]
        IMPORT _printf_percent [CODE]
        IMPORT _printf_flags [CODE]
        IMPORT _printf_widthprec [CODE]
        IMPORT _printf_d [CODE]
        IMPORT _printf_int_dec [CODE]
        IMPORT __2printf [CODE]
        IMPORT _printf_s [CODE]
        IMPORT _printf_str [CODE]
        IMPORT timer_tasklet_callback [CODE]
        IMPORT OSTmrCreate [CODE]
        IMPORT init_work [CODE]
        IMPORT OSTmrStart [CODE]
        IMPORT OSTmrStop [CODE]
        IMPORT OSTmrDel [CODE]
        IMPORT vPortFree [CODE]
        IMPORT delay_us [CODE]
        IMPORT OSTimeDly [CODE]
        IMPORT OSIntNestingCtr [DATA]

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
